# Copyright (c) 2024 Red Hat, Inc
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 
# SPDX-License-Identifier: Apache-2.0
# 
# Contributors:
#     [name] - [contribution]

apiVersion: codeco.he-codeco.eu/v1alpha1
kind: CodecoApp
metadata:
  generation: 1
  name: codecoappnetworktopology
  namespace: he-codeco-acm
  resourceVersion: "1457"
  uid: 5c948d7e-43d6-425b-b0b2-76402b606e08
spec:
  appEnergyLimit: "20"
  appFailureTolerance: ""
  appName: Topology-net
  codecoapp-msspec:
  - nwbandwidth: "1.2"
    nwlatency: "3"
    podspec:
      containers:
      - image: miguelliceon/docker-to-k8s:routerC
        name: router-c
        command: ["/entrypoints/ep_routerC.sh", "/bin/sleep", "infinity"]
        securityContext:
          privileged: true
          capabilities:
            add:
              - NET_ADMIN
        resources:
          limits:
            cpu: "2"
            memory: 4Gi
      imagePullSecrets:
          - name: dockerhub-secret
    serviceChannels:
    - advancedChannelSettings:
        minBandwidth: "5"
        frameSize: "100"
        maxDelay: "1"
        sendInterval: "10"
      channelName: dummy-1
      otherService:
        appName: Topology-net
        port: 9090
        serviceName: dummy-1
    serviceName: dummy-2
  - nwbandwidth: "1.2"
    nwlatency: "3"
    podspec:
      containers:
      - image: miguelliceon/docker-to-k8s:client
        name: server-red1
        command: ["/entrypoints/ep_red1.sh", "/bin/sleep", "infinity"]
        securityContext:
          privileged: true
          capabilities:
            add:
              - NET_ADMIN
        ports:
        - containerPort: 8080
          protocol: TCP
        imagePullSecrets:
          - name: dockerhub-secret
    serviceChannels:
    - advancedChannelSettings:
        minBandwidth: "5"
        frameSize: "100"
        maxDelay: "1"
        sendInterval: "10"
      channelName: dummy-2
      otherService:
        appName: Topology-net
        port: 8080
        serviceName: dummy-2
    serviceName: dummy-1
  complianceClass: High
  qosClass: Gold
  securityClass: Good
